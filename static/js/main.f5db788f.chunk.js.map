{"version":3,"sources":["images/RobAndLauren.jpg","js/CoverPhoto.js","js/WeddingNavBar.js","js/pages/HomePage.js","js/components/RSVPForm.js","js/pages/RSVP.js","js/pages/Location.js","js/Header.js","js/ContentPage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","CoverPhoto","props","className","style","backgroundImage","coverPhoto","WeddingNavBar","class","to","HomePage","RobAndLauren","RSVPForm","onSubmit","e","alert","currentTarget","submitForm","Group","controlId","Label","Control","required","type","placeholder","key","Check","custom","label","name","id","Text","variant","RSVP","Location","href","Header","ContentPage","path","component","App","exact","Boolean","window","location","hostname","match","ReactDOM","render","basename","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f5db788f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/RobAndLauren.cf6e42b9.jpg\";","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction CoverPhoto(props) {\r\n  return (\r\n    <div className=\"cover-photo-container\">\r\n      <div\r\n        className=\"photo\"\r\n        style={{\r\n          backgroundImage:\r\n            \"linear-gradient(rgba(0,0, 0, 0.5), rgba(0, 0, 0, 0.8)),url(\" +\r\n            props.coverPhoto +\r\n            \")\"\r\n        }}\r\n      ></div>\r\n      <div className=\"content\">\r\n        <div className=\"title\">Rob & Lauren</div>\r\n        <div className=\"subtitle\">5th July 2020</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CoverPhoto;\r\n\r\nCoverPhoto.propTypes = {\r\n  coverPhoto: PropTypes.string.isRequired\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction WeddingNavBar(props) {\r\n  return (\r\n    <div className=\"nav-wrapper\">\r\n      <ul class=\"justify-content-center\">\r\n        <li>\r\n          <Link to=\"/\">OUR WEDDING</Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/p/location\">LOCATION</Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/p/rsvp\">RSVP</Link>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WeddingNavBar;\r\n","import React from \"react\";\r\nimport CoverPhoto from \"../CoverPhoto\";\r\nimport WeddingNavBar from \"../WeddingNavBar\";\r\nimport RobAndLauren from \"../../images/RobAndLauren.jpg\";\r\n\r\nfunction HomePage(props) {\r\n  return (\r\n    <>\r\n      <div className=\"homepage\">\r\n        <CoverPhoto coverPhoto={RobAndLauren} />\r\n        <WeddingNavBar />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default HomePage;\r\n","import React from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nfunction submitForm(e) {\r\n  alert(\"Send: \" + e.currentTarget);\r\n}\r\n\r\nfunction RSVPForm() {\r\n  return (\r\n    <Form onSubmit={e => submitForm(e)}>\r\n      <Form.Group controlId=\"formGroupName\">\r\n        <Form.Label>Full Name</Form.Label>\r\n        <Form.Control required type=\"text\" placeholder=\"Enter your name\" />\r\n      </Form.Group>\r\n\r\n      <Form.Group controlId=\"formGroupAttendance\">\r\n        <Form.Label>Will you be attending?</Form.Label>\r\n        <div key={`custom-inline-radio`} className=\"mb-2\">\r\n          <Form.Check\r\n            custom\r\n            label=\"Yes\"\r\n            type=\"radio\"\r\n            name=\"attendance-radio\"\r\n            id={`inline-radio-yes`}\r\n          />\r\n          <Form.Check\r\n            custom\r\n            label=\"No\"\r\n            type=\"radio\"\r\n            name=\"attendance-radio\"\r\n            id={`inline-radio-no`}\r\n          />\r\n        </div>\r\n      </Form.Group>\r\n\r\n      <Form.Group controlId=\"formGroupMeal\">\r\n        <Form.Label>Food preference</Form.Label>\r\n        <div key={`custom-radio`} className=\"mb-3\">\r\n          <Form.Check\r\n            custom\r\n            label=\"Meat\"\r\n            type=\"radio\"\r\n            name=\"food-radio\"\r\n            id={`radio-meat`}\r\n          />\r\n          <Form.Check\r\n            custom\r\n            label=\"Vegetarian\"\r\n            type=\"radio\"\r\n            name=\"food-radio\"\r\n            id={`radio-vegetarian`}\r\n          />\r\n          <Form.Check\r\n            custom\r\n            label=\"Vegan\"\r\n            type=\"radio\"\r\n            name=\"food-radio\"\r\n            id={`radio-vegan`}\r\n          />\r\n        </div>\r\n      </Form.Group>\r\n\r\n      <Form.Group controlId=\"formGroupAllergies\">\r\n        <Form.Label>Any allergies?</Form.Label>\r\n        <Form.Control type=\"text\" placeholder=\"Enter any allergies\" />\r\n      </Form.Group>\r\n\r\n      <Form.Group controlId=\"formGroupSong\">\r\n        <Form.Label>Song choice</Form.Label>\r\n        <Form.Control type=\"text\" placeholder=\"Enter your song choice\" />\r\n        <Form.Text className=\"text-muted\">\r\n          We'll try to make sure your song gets played!\r\n        </Form.Text>\r\n      </Form.Group>\r\n\r\n      <Button variant=\"primary\" type=\"submit\">\r\n        Submit\r\n      </Button>\r\n    </Form>\r\n  );\r\n}\r\n\r\nexport default RSVPForm;\r\n","import React from \"react\";\r\nimport RSVPForm from \"../components/RSVPForm\";\r\n\r\nfunction RSVP() {\r\n  return (\r\n    <div className=\"rsvp\">\r\n      <h1 className=\"title\">RSVP</h1>\r\n      <RSVPForm />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RSVP;\r\n","import React from \"react\";\r\n\r\nfunction Location() {\r\n  return (\r\n    <div className=\"location\">\r\n      <h1 className=\"title\">Location</h1>\r\n      <p>\r\n        Our venue is\r\n        <a href=\"https://www.styallodge.co.uk/\"> Styal Lodge</a>\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Location;\r\n","import React from \"react\";\r\nimport WeddingNavBar from \"./WeddingNavBar\";\r\n\r\nfunction Header() {\r\n  return (\r\n    <>\r\n      <WeddingNavBar />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport RSVP from \"./pages/RSVP\";\r\nimport Location from \"./pages/Location\";\r\nimport Header from \"./Header\";\r\nimport { Route } from \"react-router-dom\";\r\n\r\nfunction ContentPage() {\r\n  return (\r\n    <>\r\n      <Header />\r\n      <div className=\"content-page\">\r\n        <Route path=\"/p/rsvp\" component={RSVP} />\r\n        <Route path=\"/p/location\" component={Location} />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ContentPage;\r\n","import React from \"react\";\nimport \"./scss/home.scss\";\nimport HomePage from \"./js/pages/HomePage\";\nimport RSVP from \"./js/pages/RSVP\";\nimport ContentPage from \"./js/ContentPage\";\nimport { Route } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <>\n      <Route exact={true} path=\"/\" component={HomePage} />\n      <Route path=\"/p/\" component={ContentPage} />\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { HashRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <Router basename=\"/WeddingWebsite\">\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}